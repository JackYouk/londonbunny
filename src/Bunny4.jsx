/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Tiko (https://sketchfab.com/tikoavp)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/rabbit-caba07ca532947858ab66b65879cc105
Title: Rabbit
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Bunny4(props) {
    const group = useRef();
    const { nodes, materials, animations } = useGLTF("/rabbit4.glb");
    const { actions } = useAnimations(animations, group);
    const [direction, setDirection] = useState({ x: 0, z: 0 });
    const speed = 0.2;
    const boundWidth = 50;

    // Initialize random direction and play animation
    useEffect(() => {
        setRandomDirection();
        if (actions && actions["Armature|Walk"]) {
            setTimeout(() => { actions["Armature|Walk"].reset().play() }, Math.random() * 100);
        }
    }, [actions]);

    const setRandomDirection = () => {
        const angle = Math.random() * Math.PI * 2;
        setDirection({
            x: Math.cos(angle),
            z: Math.sin(angle)
        });
        if (group.current) {
            group.current.rotation.y = -angle + Math.PI / 2;
        }
    };

    const isOutOfBounds = (position) => {
        return position.x < -boundWidth || position.x > boundWidth || position.z < -boundWidth || position.z > boundWidth;
    };

    useFrame(() => {
        if (group.current) {
            group.current.position.x += direction.x * speed;
            group.current.position.z += direction.z * speed;

            if (isOutOfBounds(group.current.position)) {
                setRandomDirection();
            }
        }
    });

    return (
        <group ref={group} {...props} dispose={null} scale={0.2}>
            <group name="Sketchfab_Scene">
                <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
                    <group
                        name="0ba1fb5fe484468e88fd50677b1beadcfbx"
                        rotation={[Math.PI / 2, 0, 0]}
                    >
                        <group name="Object_2">
                            <group name="RootNode">
                                <group
                                    name="Armature"
                                    position={[-0.022, 11.121, -15.771]}
                                    rotation={[-0.435, 0, 0]}
                                    scale={11.353}
                                >
                                    <group name="Object_5">
                                        <primitive object={nodes._rootJoint} />
                                        <skinnedMesh
                                            name="Object_27"
                                            geometry={nodes.Object_27.geometry}
                                            material={materials["Material.002"]}
                                            skeleton={nodes.Object_27.skeleton}
                                        />
                                        <skinnedMesh
                                            name="Object_28"
                                            geometry={nodes.Object_28.geometry}
                                            material={materials["Material.001"]}
                                            skeleton={nodes.Object_28.skeleton}
                                        />
                                        <skinnedMesh
                                            name="Object_29"
                                            geometry={nodes.Object_29.geometry}
                                            material={materials.Material}
                                            skeleton={nodes.Object_29.skeleton}
                                        />
                                        <skinnedMesh
                                            name="Object_30"
                                            geometry={nodes.Object_30.geometry}
                                            material={materials.Eyes}
                                            skeleton={nodes.Object_30.skeleton}
                                        />
                                        <group
                                            name="Object_26"
                                            position={[0, 19.834, 0]}
                                            rotation={[-Math.PI / 2, 0, 0]}
                                            scale={6.526}
                                        />
                                    </group>
                                </group>
                                <group
                                    name="Rabbit"
                                    position={[0, 19.834, 0]}
                                    rotation={[-Math.PI / 2, 0, 0]}
                                    scale={6.526}
                                />
                            </group>
                        </group>
                    </group>
                </group>
            </group>
        </group>
    );
}

useGLTF.preload("/rabbit.glb");